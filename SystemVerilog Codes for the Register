module register_lab5(
input clk,
input reset,
input sa,
input sb,
output la2,
output la1,
output la0,
output lb2,
output lb1,
output lb0
);
typedef enum {S0,S1,S2,S3,S4,S5,S6,S7} statetype;
statetype state, nextstate;
wire w1;
clock_divider c (clk,reset,w1);
always_ff@(posedge w1,posedge reset)
if(reset) state<=S0;
else state<=nextstate;
always_comb
case(state)
S0: if(sa) nextstate=S0;
else nextstate=S1;
S1: nextstate=S2;
S2: nextstate=S3;
S3: nextstate=S4;
S4: if(sb) nextstate=S4;
else nextstate=S5;
S5: nextstate=S6;
S6: nextstate=S7;
S7: nextstate=S0;
default: nextstate=S0;
endcase
assign la2=(1);
assign la1=(state==S0 | state==S2 | state==S3 | state==S4 |
state==S5 | state==S6);
assign la0=(state==S2 | state==S3 | state==S4 | state==S5 |
state==S6);
assign lb2=(1);
assign lb1=(state==S0 | state==S1 | state==S2 | state==S4 |
state==S6 | state==S7);
assign lb0=(state==S0 | state==S1 | state==S2 | state==S6 |
state==S7);
endmodule
